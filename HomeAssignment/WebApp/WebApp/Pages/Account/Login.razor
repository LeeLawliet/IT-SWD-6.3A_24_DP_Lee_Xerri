@page "/login"

@using WebApp.Services
@inject AuthService Auth
@inject NavigationManager Nav

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<h3>Login</h3>
<input @bind="Email" placeholder="Email" />
<input @bind="Password" type="password" placeholder="Password" />
<button @onclick="HandleLogin">Login</button>
<p>@Error</p>

@code {
    private string errorMessage = "";
    private string Email = "";
    private string Password = "";
    private string Error = "";

    private async Task HandleLogin()
    {
        try
        {
            var success = await Auth.LoginAsync(Email, Password);
            if (success)
            {
                Nav.NavigateTo("bookings");
            }
            else
            {
                Error = "Invalid credentials.";
            }
        }
        catch (HttpRequestException ex)
        {
            var raw = ex.ToString().ToLower();

            if (raw.Contains("failed to fetch") || raw.Contains("err_connection_refused"))
            {
                errorMessage = "Unable to connect to server. Please try again later.";
            }
            else
            {
                errorMessage = "An unexpected error occurred.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Unexpected error. Please contact support.";
            Console.WriteLine($"[Unhandled Error] {ex}");
        }
    }
}